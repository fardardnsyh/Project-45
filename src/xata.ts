// Generated by Xata Codegen 0.28.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "applications",
    columns: [
      { name: "userId", type: "string", notNull: true, defaultValue: "null" },
      { name: "company", type: "string", notNull: true, defaultValue: "null" },
      { name: "postingLink", type: "string" },
      {
        name: "status",
        type: "string",
        notNull: true,
        defaultValue: "applied",
      },
      { name: "notes", type: "text" },
      {
        name: "lastUpdated",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      { name: "position", type: "string", notNull: true, defaultValue: "null" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Applications = InferredTypes["applications"];
export type ApplicationsRecord = Applications & XataRecord;

export type DatabaseSchema = {
  applications: ApplicationsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Brey-Rivera-s-workspace-voa7ek.us-east-1.xata.sh/db/jobtrackerv2-app",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
